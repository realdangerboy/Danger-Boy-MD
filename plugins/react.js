const fs=require('fs'), path=require('path'); const db=path.join(__dirname,'../database/autoreact.json'); let AR={}; if(fs.existsSync(db)) AR=JSON.parse(fs.readFileSync(db))
module.exports={ name:'autoreact', description:'Auto react to media with custom emoji', command:['autoreact'], category:'fun',
 handler: async (sock, chat, args, msg)=>{ const sub=args[0]; if(!sub) return sock.sendMessage(chat,{text:'Usage: .autoreact on <emoji> [both|group|chat] or .autoreact off'})
 if(sub==='on'){ const emoji=args[1]||'❤'; const scope=args[2]||'both'; AR[chat]={enabled:true,emoji,scope}; fs.writeFileSync(db,JSON.stringify(AR,null,2)); return sock.sendMessage(chat,{text:`✔ AutoReact on (${emoji}, ${scope})`}) } if(sub==='off'){ delete AR[chat]; fs.writeFileSync(db,JSON.stringify(AR,null,2)); return sock.sendMessage(chat,{text:'✖ AutoReact off'}) } },
 watcher: async (sock, msg, chat)=>{ try{ const s=AR[chat]; if(!s||!s.enabled) return; const isGroup = chat.endsWith('@g.us'); if(s.scope==='group' && !isGroup) return; if(s.scope==='chat' && isGroup) return; const isMedia = msg.message?.imageMessage||msg.message?.videoMessage||msg.message?.stickerMessage||msg.message?.documentMessage||msg.message?.audioMessage; if(isMedia) await sock.sendMessage(chat,{ react: { text: s.emoji, key: msg.key } }) }catch(e){} } }