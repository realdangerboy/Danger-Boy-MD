const ytdlp=require('yt-dlp-exec'); const fs=require('fs'), path=require('path'), os=require('os');
function tempfile(){ return path.join(os.tmpdir(), `dby_tiktok_${Date.now()}.mp4`) }
module.exports={ name:'tiktok', description:'Download TikTok with quality buttons (stub)', command:['tiktok','tt'], category:'download',
 handler: async (sock, chat, args, msg)=>{ if(!args[0]) return sock.sendMessage(chat,{text:'Usage: .tiktok <url>'}); const url=args[0]; try{ const info=await ytdlp(url,{dumpSingleJson:true}); const formats=info.formats.filter(f=>f.ext==='mp4'&&f.height).map(f=>({quality:`${f.height}p`, id:f.format_id})); const uniq=[]; const avail=[]; for(let f of formats){ if(!uniq.includes(f.quality)){ uniq.push(f.quality); avail.push(f) } } const buttons = avail.map(f=>({ buttonId: `.gettiktok ${encodeURIComponent(url)} ${f.id}`, buttonText:{displayText:f.quality}, type:1 })); await sock.sendMessage(chat,{ text:'ðŸŽ¬ TikTok found. Choose quality', buttons, headerType:1 }) }catch(e){ console.error(e); await sock.sendMessage(chat,{text:'âš  Error fetching video info. Ensure yt-dlp is installed.'}) } } }